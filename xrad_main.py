#!/usr/bin/env python# ----------------------------------------------------------------------------------##   @Author: Jose Salgado.#   @Colaborador: Ignacio Heredia#   @Require: admin privileges#   run: $ sudo python xrad.py### ----------------------------------------------------------------------------------from conf import configfrom libs import FTPfrom libs import guiimport threadingimport osimport sysimport csv__author__ = "Jose A. Salgado(jose.salgado.wrk@gmail.com)"__copyright__ = "Copyright (C) 2015 - Jose A. Salgado"__license__ = "LGPL 3.0"def cmdLineConf(cmdArgs):    try:        if cmdArgs[1].find("-h") > -1 and cmdArgs[2].find(config.dataFileExt) > -1:            if os.path.exists(cmdArgs[2]):                config.log.add("build conf header and run")                FTP.readDFHeader(cmdArgs[2])            else:                config.log.add("ERROR: don't exists header file...")    except Exception as e:        config.log.add("ERROR: Bad header file...")def loadLastSensorSet():    r = False    try:        with open(config.storeConf,'r+') as cf:            i = 1            while True:                l = cf.readline()                s = l.split(',')                config.fileHeader['sname%d' % i]  = s[0]                config.fileHeader['sunit%d' % i]  = s[1]                config.fileHeader['rawPos%d' % i] = i+1                config.sensors_st[s[0]] = config.sensor_online                print "Sensor ID: %d loaded" % i                i += 1            r = True    except Exception as e:        config.log.add("ERROR: NO EPA descriptor, PY Says:[%s]" %e)    finally:        cf.close()        return rdef launchGUI():    gui.top = gui.gui(None)    gui.top.title('EPA Admin | LabGCBA | version :%d.%d.%d.%s' % (    config.version['anio'], config.version['menor'], config.version['mayor'], config.version['fase']))    gui.top.mainloop()    config.log.add("INFO: Stoping GUI")def main():    if loadLastSensorSet() == True:        config.log.add(config.log.add("INFO: Successful f[HEAD]"))    elif len(sys.argv) > 1:        cmdLineConf(sys.argv)    config.log.add("------< Log EPAs Data Mode:%s >------- \n" % config.OSx)    config.log.add("INFO: Loading TK-GUI")    ftpThread = threading.Thread(target=FTP.createAndRun, )    ftpThread.start()    launchGUI()    config.log.add("INFO: Closing FTP Server...")    FTP.server.close_all()if __name__ == '__main__':    main()